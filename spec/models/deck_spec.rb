require 'spec_helper'
describe 'deck' do

 before(:all) do
    #Do not use deck type ids that are already set int the DeckType model,
    #since some are autogenerated in each game
    @deck_type_id = rand(10000)
    @deck_type_id2 = rand(10000)

    @card1 = create(:card, deck_type_id: @deck_type_id)
    @card2 = create(:card, deck_type_id: @deck_type_id)
    @card3 = create(:card, deck_type_id: @deck_type_id)
    @card4 = create(:card, deck_type_id: @deck_type_id2)
  end

before(:each) do
    @deck = create(:deck, deck_type_id: @deck_type_id)
end


  describe 'basic validation' do
    it 'has a valid factory' do
      create(:deck).should be_valid
    end
  end

  describe 'basic game functionality' do
    it 'has cards from the same deck_type' do
      deck_cards = @deck.cards
      deck_cards.size.should == 3
      deck_cards.include?(@card1).should be_true
      deck_cards.include?(@card2).should be_true
      deck_cards.include?(@card3).should be_true
      deck_cards.include?(@card4).should be_false
    end

    it 'stored a random order of the cards before save' do
      card_order = @deck.cards_order
      card_order.size.should == 3
      card_order.include?(@card1.id).should be_true
      card_order.include?(@card2.id).should be_true
      card_order.include?(@card3.id).should be_true
      card_order.include?(@card4.id).should be_false
    end

    it 'Peak at the first card at the deck and keeps track of the last view (time and user)' do
      @deck.last_viewed_at.should be_nil
      @deck.last_viewed_by.should be_nil
      topCard = @deck.cards.find {|x| x.id == @deck.cards_order.first}

      @deck.peak("Yoni").should eq topCard
      first_view_time = @deck.last_viewed_at
      first_view_time.should_not be_nil
      @deck.last_viewed_by.should == "Yoni"

      sleep(1) #this will make the time of the view at to be different

      @deck.peak("Bobo").should eq topCard
      @deck.last_viewed_by.should == "Bobo"
      second_view_time = @deck.last_viewed_at
      second_view_time.should be > first_view_time

    end

    it 'places the first card at the buttom of the deck' do
      original_order = @deck.cards_order
      @deck.place_top_card_at_the_buttom
      new_order = @deck.cards_order

      new_order[0].should == original_order[1]
      new_order[2].should == original_order[0]
    end
  end
end